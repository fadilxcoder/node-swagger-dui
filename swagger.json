{
    "openapi": "3.0.3",
    "info": {
        "title": "CAR Rental",
        "description": "FACR Laravel project API gateway",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/",
            "description": ""
        }
    ],
    "paths": {
        "/api/contact-us": {
            "post": {
                "operationId": "post_contactContact UsCollection",
                "tags": [
                    "Contact Us"
                ],
                "responses": {
                    "201": {
                        "description": "Contact Us resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact.Us.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact.Us"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact.Us"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a contact us resource.",
                "description": "It creates a contact us resource.",
                "parameters": [],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone ": {
                                        "type": "string",
                                        "example": "+230 5555 5555"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@gmail.com"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur commodo lectus risus. Vestibulum cursus arcu vel condimentum euismod. Sed nec erat eu sem mattis porta."
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/esx-user": {
            "get": {
                "operationId": "getESX UserCollection",
                "tags": [
                    "ESX User"
                ],
                "responses": {
                    "200": {
                        "description": "ESX User collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ESX.User.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ESX.User"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ESX.User"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves an ESX User resource.",
                "description": "Retrieves an ESX User resource.",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "ESX user email",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false,
                        "example": "pwaters@auer.com"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/esx-user/{id}": {
            "parameters": []
        },
        "/api/redis-user": {
            "get": {
                "operationId": "getRedis UserCollection",
                "tags": [
                    "Redis User"
                ],
                "responses": {
                    "200": {
                        "description": "Redis User collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Redis.User.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Redis.User"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Redis.User"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves an Redis User resource.",
                "description": "Retrieves an Redis User resource.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/redis-user/{id}": {
            "parameters": []
        },
        "/api/user/{id}": {
            "get": {
                "operationId": "getFake UserItem",
                "tags": [
                    "Fake User"
                ],
                "responses": {
                    "200": {
                        "description": "Fake User resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fake.User.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fake.User"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fake.User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Fake User resource.",
                "description": "Retrieves a Fake User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/vehicle/book-now/{id}": {
            "post": {
                "operationId": "post_book_nowVehiclesCollection",
                "tags": [
                    "Vehicles"
                ],
                "responses": {
                    "201": {
                        "description": "Vehicles resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicles.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicles"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicles"
                                }
                            }
                        },
                        "links": {
                            "GetVehiclesItem": {
                                "operationId": "getVehiclesItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/vehicle/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Vehicles resource.",
                "description": "Creates a Vehicles resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Vehicles resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vehicles.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vehicles"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Vehicles"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/vehicle/rental-quote/{id}": {
            "post": {
                "operationId": "post_rental_quoteVehiclesCollection",
                "tags": [
                    "Vehicles"
                ],
                "responses": {
                    "200": {
                        "description": "Description",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "days": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "condition": {
                                            "type": "string",
                                            "example": "Pay 25% of total upon booking"
                                        },
                                        "price_per_day": {
                                            "type": "integer",
                                            "example": 28
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 280
                                        },
                                        "pay": {
                                            "type": "integer",
                                            "example": 70
                                        },
                                        "remaining": {
                                            "type": "integer",
                                            "example": 210
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Free quote for renting a vehicle.",
                "description": "Free quote for renting a vehicle for a period of time.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "integer"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "pick_up_date": {
                                        "type": "string",
                                        "example": "2021-05-24",
                                        "format": "date"
                                    },
                                    "pick_up_time": {
                                        "type": "string",
                                        "example": "05:00",
                                        "enum": [
                                            "05:00",
                                            "06:00",
                                            "07:00",
                                            "08:00",
                                            "09:00",
                                            "10:00",
                                            "11:00",
                                            "12:00",
                                            "13:00",
                                            "14:00",
                                            "15:00",
                                            "16:00",
                                            "17:00",
                                            "18:00",
                                            "19:00",
                                            "20:00",
                                            "21:00"
                                        ]
                                    },
                                    "pick_up_location": {
                                        "type": "string",
                                        "example": "Airport of mauritius"
                                    },
                                    "drop_off_date": {
                                        "type": "string",
                                        "example": "2021-11-27",
                                        "format": "date"
                                    },
                                    "drop_off_time": {
                                        "type": "string",
                                        "example": "14:00",
                                        "enum": [
                                            "05:00",
                                            "06:00",
                                            "07:00",
                                            "08:00",
                                            "09:00",
                                            "10:00",
                                            "11:00",
                                            "12:00",
                                            "13:00",
                                            "14:00",
                                            "15:00",
                                            "16:00",
                                            "17:00",
                                            "18:00",
                                            "19:00",
                                            "20:00",
                                            "21:00"
                                        ]
                                    },
                                    "drop_off_location": {
                                        "type": "string",
                                        "example": "Hotels, AirBnB, ..."
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/vehicle/{id}": {
            "get": {
                "operationId": "getVehiclesItem",
                "tags": [
                    "Vehicles"
                ],
                "responses": {
                    "200": {
                        "description": "Vehicles resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicles.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicles"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicles"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves vehicle details resource.",
                "description": "Retrieves vehicle details resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/vehicles": {
            "get": {
                "operationId": "getVehiclesCollection",
                "tags": [
                    "Vehicles"
                ],
                "responses": {
                    "200": {
                        "description": "Vehicles collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Vehicles.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vehicles"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vehicles"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves list of vehicles resource.",
                "description": "Retrieves list of vehicles resource.",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Vehicle category name",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "small-cars",
                                "family-cars",
                                "suv-cars"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false,
                        "example": "small-cars"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/oauth-client": {
            "ref": "JWT Token",
            "post": {
                "operationId": "postClientIdToken",
                "tags": [
                    "Client Token"
                ],
                "responses": {
                    "200": {
                        "description": "Client OAuth token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedAuth"
                                }
                            }
                        }
                    }
                },
                "summary": "Get client authorization token.",
                "description": "Verify client and get Open Authorization token.",
                "parameters": [],
                "requestBody": {
                    "description": "Generate new OAuth Token",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credentials"
                            }
                        }
                    },
                    "required": false
                },
                "deprecated": false
            },
            "parameters": []
        }
    },
    "components": {
        "schemas": {
            "Contact.Us": {
                "type": "object",
                "description": "",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Thank you for contacting us !"
                    }
                }
            },
            "Contact.Us.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "message": {
                        "type": "string",
                        "example": "Thank you for contacting us !"
                    }
                }
            },
            "ESX.User": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "xxxxxxxxx_xxxxx"
                    },
                    "name": {
                        "type": "string",
                        "example": "john Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                    },
                    "address": {
                        "type": "string",
                        "example": "426 Murray Courts..."
                    },
                    "description": {
                        "type": "string",
                        "example": "Reiciendis nesciunt est et alias repellendus....."
                    }
                }
            },
            "ESX.User.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "type": "string",
                        "example": "xxxxxxxxx_xxxxx"
                    },
                    "name": {
                        "type": "string",
                        "example": "john Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                    },
                    "address": {
                        "type": "string",
                        "example": "426 Murray Courts..."
                    },
                    "description": {
                        "type": "string",
                        "example": "Reiciendis nesciunt est et alias repellendus....."
                    }
                }
            },
            "Fake.User": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    }
                }
            },
            "Fake.User.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    }
                }
            },
            "Redis.User": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "xxxxxxxxx_xxxxx"
                    },
                    "name": {
                        "type": "string",
                        "example": "john Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                    }
                }
            },
            "Redis.User.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "type": "string",
                        "example": "xxxxxxxxx_xxxxx"
                    },
                    "name": {
                        "type": "string",
                        "example": "john Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                    }
                }
            },
            "Vehicles": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Toyota Hilux"
                    },
                    "image_full_path": {
                        "type": "string",
                        "example": "http://www.domain.com/image/path/my-image.jpg"
                    },
                    "price": {
                        "type": "integer",
                        "example": "28"
                    },
                    "transmission": {
                        "type": "integer",
                        "example": "Automatic",
                        "enum": [
                            "Automatic",
                            "Manual",
                            "Automated Manual",
                            "Continuously Variable"
                        ]
                    }
                }
            },
            "Vehicles.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Toyota Hilux"
                    },
                    "image_full_path": {
                        "type": "string",
                        "example": "http://www.domain.com/image/path/my-image.jpg"
                    },
                    "price": {
                        "type": "integer",
                        "example": "28"
                    },
                    "transmission": {
                        "type": "integer",
                        "example": "Automatic",
                        "enum": [
                            "Automatic",
                            "Manual",
                            "Automated Manual",
                            "Continuously Variable"
                        ]
                    }
                }
            },
            "Token": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Credentials": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string",
                        "example": "Atl45_cNn_007"
                    }
                }
            },
            "FailedAuth": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Invalid client-token !"
                    }
                }
            }
        },
        "responses": {},
        "parameters": {},
        "examples": {},
        "requestBodies": {},
        "headers": {},
        "securitySchemes": {
            "Client Token Value": {
                "type": "apiKey",
                "description": "Value for the client-token header parameter.",
                "name": "client-token",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "Client Token Value": []
        }
    ],
    "tags": []
}